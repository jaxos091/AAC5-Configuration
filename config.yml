#   AAC Configuration
# by jaxos

# Checks: | KillAura | Aim | Hitbox |Reach | Movement | NoSlow |


mysql:
  enabled: false
  host: "localhost"
  port: 3306
  database: "aac" # You may wish to use "dbname?useSSL=false" for local MySQL databases.
  username: ""
  password: ""

# AAC supports cross server alerts through BungeeCord. (Do NOT enable this option if you are not using BungeeCord)
bungeecord: false

# Configure the different checks in AAC - modular components that try to detect certain categories of cheating
checks:
  # The delays check detects players that perform various actions faster than is normally possible
  delays:
    enabled: false

    # delays.vl represents an estimate of the total time advantage that a player has gained by cheating
    vl:
      mitigate: false
      threshold: 0
      max: 0
      decay: 0

    # Enable or disable delays checking for the following situations
    fast_break: false
    fast_place: false
    fast_use: false
    fast_bow: false
    regen: false
    fast_sneak: false
    fast_release: false
    break_delay: false

  # The move check detects a wide range of modifications relating to movement, including timer, nofall and velocity.
  move:
    enabled: true

    # move.vl represents an estimate of the total extra distance a player has travelled by cheating
    vl:
      mitigate: false
      threshold: 1.0
      max: 2.0
      decay: 0.01

    # move.timer represents an estimate of the total time advantage a player has gained by cheating
    timer:
      mitigate: false
      threshold: 0
      max: 0
      decay: 0

    # Phasing causes a player's vl to be increased more than normal violations
    # This should be set to a value >= vl.threshold to always block phase attempts
    phase_vl: 1.0

    # AAC can transparently block nofall by replacing ground calculations from the client with its own calculations
    block_nofall: false

    # AAC will wait at most this long for a player to respond to velocity sent by the server
    max_vel_time: 1.0

    # This is how long AAC will remember piston extensions for
    piston_wait_time: 1.0

    # Enable/disable checking for noslowdown (sneak). Minor performance penalty if disabled
    check_sneak: true

    # Enable/disable checking for noslowdown (item use). Minor performance penalty if disabled
    check_item_use: true

    # Enable/disable movement checking for players with allow flight enabled.
    check_flying: false

    # These are thresholds that AAC uses in special cases where precise checking isn't possible
    flowing_speed: 0.2
    bubble_column_speed: 1.8
    bumping_speed: 0.1
    elytra_rocket_speed: 2.0
    riptide_speed: 4.2
    boat_hitbox_tolerance: 0.8
    shulker_hitbox_tolerance: 0.6
    elytra_landing_tolerance: 0.5

  # The aimbot check detects aim modifications used to gain an advantage in combat, including aimassists and killauras.
  aimbot:
    enabled: true

    check_sensitivity: true
    check_mouse_delta: true
    check_head_snap: true
    check_pitch_spread: true
    check_zero_point: true

  # The autoclicker check detects abnormal or irregular attack patterns characteristic of autoclickers and killauras.
  autoclicker:
    enabled: true

    check_tick_delay: true
    check_noswing: true
    check_timing: true
    sample_size: 25

  # The hitbox check verifies that players look at the entities they hit, and that those entities are in range.
  hitbox:
    enabled: true

    # hitbox.vl represents an estimate of the total extra distance a player has reached by cheating
    vl:
      mitigate: false
      threshold: 0.5
      max: 1.0
      decay: 0.01

    lag_compensation_ticks: 20
    hit_queue_size: 4
    check_blocks: true


#   Unused
  interact:
    enabled: false
    max_angle_diff: 0
    exempt: []
    vl:
      mitigate: false
      threshold: 0
      max: 0
      decay: 0

  # The misc check looks for certain accurate indicators of cheating
  misc:
    enabled: true

    invalid_pitch: true
    player_abilities: true
    rotation_rate: true

# Using the features above, AAC will periodically analyse players on the server and generate a risk score.
# Analysis results can be accessed for all players at once with '/aac status', or detailed reports can be generated
# for individual players with /aac status <player> [players...]
analysis:
  # AAC analyses one player at a time, e.g. if your server has 50 players, they will each be analysed every 50 * period
  # seconds. You can force AAC to analyse any particular player at any time with /aac check <player> [players...]
  period: 1.0

  # How far back should AAC look when analysing a player?
  history: 5
  history_time_unit: MINUTES # https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html

  # Should AAC automatically clear database entries older than 'history' when the server starts?
  clear_stale_entries: true

  # At what score should a player's username be coloured yellow in /aac status?
  yellow_score: 15

  # At what score should a player's username be coloured red in /aac status?
  red_score: 50

actions:
  
#   aim check
  aimbot:
    delay: 1.0
    features:
      - aac_aimbot_*
      - aac_misc_pitch
      - aac_misc_rotation
    thresholds:
      65: "ccmd %player_name% if (-ping-<75&-tps->19.95)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      78: "ccmd %player_name% if (-ping-<120&-tps->19.7)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      85: "ccmd %player_name% if (-ping-<350&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      120:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"

  aimassist:
    delay: 1.0
    features:
      - aac_aimassist_*
      - aac_misc_pitch
      - aac_misc_rotation
    thresholds:
      65: "ccmd %player_name% if (-ping-<75&-tps->19.95)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      75: "ccmd %player_name% if (-ping-<120&-tps->19.7)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      95: "ccmd %player_name% if (-ping-<350&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      120:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"


#   clk 
  timing:
    delay: 1.0
    features:
      - aac_clk_timing
    thresholds:
      35: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      48: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      55:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"

  noswiming:
    delay: 1.0
    features:
      - aac_clk_noswing
    thresholds:
      25: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      35: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      45:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"

  tick_align:
    delay: 1.0
    features:
      - aac_clk_tick_align
    thresholds:
      55: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      65: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      75:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"


#   hitboxes
  multi:
    delay: 1.0
    features:
      - aac_hitbox_multi
    thresholds:
      35: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      48: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      55:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"
        
  reach:
    delay: 1.0
    features:
      - aac_hitbox_reach
    thresholds:
      16: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      35: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      55:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"

  walls:
    delay: 1.0
    features:
      - aac_hitbox_walls
    thresholds:
      35: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      55: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      75:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"

  miss:
    delay: 1.0
    features:
      - aac_hitbox_miss
    thresholds:
      55: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      65: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ ban %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      75:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"
        
        
#   move
  noslow:
    delay: 1.0
    features:
      - aac_move_noslow
    thresholds:
      45: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      65: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      70:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"
        
  generic:
    delay: 1.0
    features:
      -aac_move_generic
    thresholds:
      120: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      250: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      350:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%"        

  inf:
    delay: 1.0
    feature:
      - aac_move_inf
    thresholds:
      65: "ccmd %player_name% if (-ping-<75&-tps->19.8)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      95: "ccmd %player_name% if (-ping-<120&-tps->19.0)&-uptime->80&-time_online->5000 do /0/ kick %player_name% 20m Unfair Advantage -s /0/ aac reset %player_name%"
      120:
        - "ban %player_name% 20m Unfair Advantage -s"
        - "aac reset %player_name%" 
        
# AAC compiles data from all of its checks and uses it to generate a set of weighted features for each player
# You can set the weight of any feature to 0 to disable it.

# weight (How many violation levels will be added if a player failed this check?)
features:
  aac_delays_break:
    weight: 0
    format: ""
  aac_delays_place:
    weight: 0
    format: ""
  aac_delays_consume:
    weight: 0
    format: ""
  aac_delays_bow:
    weight: 0
    format: ""
  aac_delays_regen:
    weight: 0
    format: ""
  aac_delays_sneak:
    weight: 0
    format: ""
  aac_delays_release:
    weight: 0
    format: ""
  aac_delays_breakdelay:
    weight: 0
    format: ""
  aac_move_nofall:
    weight: 0
    format: ""
  aac_move_vel:
    weight: 0
    format: ""
  aac_move_elytra:
    weight: 0
    format: ""
  aac_move_vehicle:
    weight: 0
    format: ""
  aac_move_water:
    weight: 0
    format: ""
  aac_move_lava:
    weight: 0
    format: ""
  aac_move_noslow:
    weight: 1.0
    format: "The player has frequently ignored sneak/item slowdowns"
  aac_move_generic:
    weight: 1.0
    format: "The player has moved {rate} blocks/min incorrectly"
  aac_move_timer:
    weight: 0
    format: ""
  aac_move_inf:
    weight: 2.0
    format: "The player is sending invalid movement packets"
  aac_aimbot_spread:
    weight: 2.0
    format: "The player's pitch has varied in an unusual way during combat"
  aac_aimbot_sync:
    weight: 2.0
    format: "The player's horizontal and vertical aiming patterns are out of sync"
  aac_aimbot_horz:
    weight: 2.0
    format: "The player has exhibited yaw patterns characteristic of aimbot"
  aac_aimbot_vert:
    weight: 2.0
    format: "The player has exhibited pitch patterns characteristic of aimbot"
  aac_aimbot_snap:
    weight: 2.0
    format: "The player performs abnormal head snaps during combat"
  aac_aimbot_zero:
    weight: 2.0
    format: "The player's aiming patterns change when they enter combat"
  aac_aimassist_horz:
    weight: 2.0
    format: "The player has exhibited yaw patterns characteristic of aimassist"
  aac_aimassist_vert:
    weight: 2.0
    format: "The player has exhibited pitch patterns characteristic of aimassist"
  aac_clk_noswing:
    weight: 2.0
    format: "The player doesn't swing their arm while attacking"
  aac_clk_tick_align:
    weight: 2.0
    format: "The player's arm animations are aligned with tick boundaries"
  aac_clk_timing:
    weight: 2.0
    format: "The player's attack packet timings are characteristic of killaura"
  aac_clk_cps:
    weight: 0
    format: ""
  aac_clk_var:
    weight: 0
    format: ""
  aac_hitbox_multi:
    weight: 2.0
    format: "The player has attacked extra times in a single tick"
  aac_hitbox_miss:
    weight: 2.0
    format: "The player attacks entities without looking at them"
  aac_hitbox_walls:
    weight: 2.0
    format: "The player attacks entities through solid walls"
  aac_hitbox_reach:
    weight: 3.0
    format: "The player attacks {value} blocks further than normal"
  aac_interact_generic:
    weight: 0
    format: ""
  aac_interact_break:
    weight: 0
    format: ""
  aac_interact_place:
    weight: 0
    format: ""
  aac_misc_abilities:
    weight: 2.0
    format: "The player has sent invalid player ability packets"
  aac_misc_pitch:
    weight: 2.0
    format: "The player has sent invalid rotation pitch packets"
  aac_misc_rotation:
    weight: 2.0
    format: "The player is rotating too quickly"
  aac_new_user:
    weight: 0
    format: ""
  aac_new_addr:
    weight: 0
    format: ""
  aac_info_move:
    weight: 0
    format: ""
  aac_info_combat:
    weight: 0
    format: ""
  aac_info_interact:
    weight: 0
    format: ""

# AAC will run the following commands from the CONSOLE before teleporting a staff member to a player
pre_spectate:
# - "aac sudo %player_name% vanish on" # /aac sudo <player> <command> executes <command> as <player>
  - ""
# AAC will run the following commands from the CONSOLE after teleporting a staff member back
post_spectate:
# - "aac sudo %player_name% vanish off"
  - ""

# Can be any valid minecraft colour code, e.g. a corresponds to green
aac_prefix_colour: 2
